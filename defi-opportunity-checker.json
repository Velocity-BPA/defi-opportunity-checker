[
    {
        "id": "703cf708185ec943",
        "type": "tab",
        "label": "Dashboard/Auth/Saving/OpenAI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "65595fcb44226b28",
        "type": "inject",
        "z": "703cf708185ec943",
        "name": "Check Opportunities",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "8d514e5a43f6a7ae"
            ]
        ]
    },
    {
        "id": "8d514e5a43f6a7ae",
        "type": "http request",
        "z": "703cf708185ec943",
        "name": "Fetch DeFi Yields",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://yields.llama.fi/pools",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1010,
        "y": 260,
        "wires": [
            [
                "abdde9854434a424",
                "21508e5b716dab81"
            ]
        ]
    },
    {
        "id": "c31310790cbaab10",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Parse Yield Data",
        "func": "// Check if API failed or timed out\nif (!msg.payload || !msg.payload.data || msg.payload.data.length === 0) {\n    node.warn(\"API timeout - using backup demo data\");\n    \n    // Fast demo data\n    const opportunities = [\n        { protocol: \"Compound\", pool_name: \"USDC\", apy: 8.5, tvl_millions: 2000, chain: \"Ethereum\" },\n        { protocol: \"Aave\", pool_name: \"USDT\", apy: 7.2, tvl_millions: 1500, chain: \"Ethereum\" },\n        { protocol: \"Curve\", pool_name: \"3Pool\", apy: 6.8, tvl_millions: 800, chain: \"Ethereum\" }\n    ];\n    \n    msg.payload = { opportunities };\n    return msg;\n}\n\n// Parse DeFi yield data for top opportunities\nconst pools = msg.payload.data || [];\n\n// Filter for major protocols with good TVL\nconst majorProtocols = ['Compound', 'Aave', 'Curve', 'Uniswap', 'Convex'];\nconst filteredPools = pools.filter(pool => {\n    return pool.tvlUsd > 10000000 && // $10M+ TVL\n           pool.apy > 0 && \n           pool.apy < 100 && // Remove obvious outliers\n           majorProtocols.some(protocol => \n               pool.project.toLowerCase().includes(protocol.toLowerCase())\n           );\n});\n\n// Get top 8 opportunities\nconst opportunities = filteredPools\n    .sort((a, b) => b.apy - a.apy)\n    .slice(0, 8)\n    .map(pool => ({\n        protocol: pool.project,\n        pool_name: pool.symbol || 'Main Pool',\n        apy: Math.round(pool.apy * 100) / 100,\n        tvl_millions: Math.round(pool.tvlUsd / 1000000),\n        chain: pool.chain || 'Ethereum'\n    }));\n\nmsg.payload = { opportunities };\nnode.warn(`Found ${opportunities.length} opportunities`);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 260,
        "wires": [
            [
                "246015ea64da9ecc",
                "7ad957eec598875c"
            ]
        ]
    },
    {
        "id": "21508e5b716dab81",
        "type": "log-tap",
        "z": "703cf708185ec943",
        "d": true,
        "name": "Raw API Data",
        "level": "debug",
        "toConsole": false,
        "toSideBar": true,
        "outputProperty": "",
        "outputPropertyType": "full",
        "x": 1240,
        "y": 360,
        "wires": [
            [
                "abdde9854434a424"
            ]
        ]
    },
    {
        "id": "7ad957eec598875c",
        "type": "log-tap",
        "z": "703cf708185ec943",
        "d": true,
        "name": "Parsed Opportunities",
        "level": "debug",
        "toConsole": false,
        "toSideBar": true,
        "outputProperty": "",
        "outputPropertyType": "full",
        "x": 2060,
        "y": 380,
        "wires": [
            [
                "246015ea64da9ecc"
            ]
        ]
    },
    {
        "id": "246015ea64da9ecc",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Current Portfolio",
        "func": "// Check for user-specific portfolio first\nconst userId = msg.user_id; // Get from authentication\nconst userPortfolioKey = `portfolio_${userId}`; // e.g., \"portfolio_user_admin\"\nconst userPortfolio = flow.get(userPortfolioKey);\n\nif (userPortfolio) {\n    // Use user-specific portfolio\n    msg.portfolio = userPortfolio;\n    node.warn(`Using ${userId} portfolio: ${userPortfolio.protocol} at ${userPortfolio.current_apy}%`);\n} else {\n    // Use default portfolio for new users\n    const defaultPosition = {\n        protocol: \"Compound\",\n        pool_name: \"USDC\",\n        current_apy: 5.2,\n        position_value: 10000,\n        last_updated: new Date(),\n        user_id: userId  // Associate with user\n    };\n    \n    // Save default portfolio for this user\n    flow.set(userPortfolioKey, defaultPosition);\n    msg.portfolio = defaultPosition;\n    \n    node.warn(`Created default portfolio for ${userId}: ${defaultPosition.protocol} at ${defaultPosition.current_apy}%`);\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 260,
        "wires": [
            [
                "da2840936985d7e2"
            ]
        ]
    },
    {
        "id": "da2840936985d7e2",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Rank Opportunities",
        "func": "const { opportunities } = msg.payload;\nconst { portfolio } = msg;\n\nif (!opportunities || !portfolio) {\n    node.error(\"Missing data\");\n    return null;\n}\n\n// Calculate improvements and rank opportunities\nconst rankedOpportunities = opportunities.map(opp => {\n    const improvement = opp.apy - portfolio.current_apy;\n    \n    // Simple risk scoring based on TVL and APY\n    let risk_score = 5; // Base risk\n    \n    // TVL risk adjustment\n    if (opp.tvl_millions > 1000) risk_score -= 2; // Very large TVL\n    else if (opp.tvl_millions > 100) risk_score -= 1; // Large TVL\n    else if (opp.tvl_millions < 50) risk_score += 2; // Small TVL\n    \n    // APY risk adjustment (too good to be true?)\n    if (opp.apy > 20) risk_score += 2;\n    if (opp.apy > 50) risk_score += 4;\n    \n    risk_score = Math.max(1, Math.min(10, risk_score));\n    \n    return {\n        ...opp,\n        improvement: Math.round(improvement * 100) / 100,\n        risk_score,\n        risk_label: risk_score <= 3 ? \"Low\" : risk_score <= 7 ? \"Medium\" : \"High\",\n        recommended: improvement > 1.5 && risk_score <= 7, // Must improve 1.5%+ and not high risk\n        annual_gain: Math.round((improvement * portfolio.position_value / 100) * 100) / 100\n    };\n});\n\n// Sort by improvement potential\nconst sortedOpportunities = rankedOpportunities.sort((a, b) => {\n    if (a.recommended && !b.recommended) return -1;\n    if (!a.recommended && b.recommended) return 1;\n    return b.improvement - a.improvement;\n});\n\n// Add smart warnings to opportunities\nconst smartOpportunities = sortedOpportunities.map(opp => {\n    let warnings = [];\n    \n    if (opp.apy > 20) warnings.push(\"‚ö†Ô∏è High APY - verify sustainability\");\n    if (opp.tvl_millions < 100) warnings.push(\"‚ö†Ô∏è Low liquidity risk\"); \n    if (opp.improvement > 8) warnings.push(\"üö® Major yield jump - double-check\");\n    \n    return {\n        ...opp,\n        warnings: warnings,\n        confidence: warnings.length === 0 ? \"High\" : warnings.length === 1 ? \"Medium\" : \"Low\"\n    };\n});\n\nmsg.payload = {\n    current_portfolio: portfolio,\n    opportunities: smartOpportunities,\n    top_recommendation: smartOpportunities.find(opp => opp.recommended) || smartOpportunities[0],\n    total_found: smartOpportunities.length,\n    recommended_count: smartOpportunities.filter(opp => opp.recommended).length\n};\n\nnode.warn(`Ranked ${sortedOpportunities.length} opportunities, ${msg.payload.recommended_count} recommended`);\n\n// Add timestamp\nmsg.timestamp = new Date().toLocaleString();\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 260,
        "wires": [
            [
                "8ca5afa350725104",
                "ebb52c7c9697024a"
            ]
        ]
    },
    {
        "id": "ebb52c7c9697024a",
        "type": "log-tap",
        "z": "703cf708185ec943",
        "d": true,
        "name": "Final Rankings",
        "level": "debug",
        "toConsole": false,
        "toSideBar": true,
        "outputProperty": "",
        "outputPropertyType": "full",
        "x": 2820,
        "y": 360,
        "wires": [
            [
                "8ca5afa350725104"
            ]
        ]
    },
    {
        "id": "8e7bb53166418cdf",
        "type": "log-tap",
        "z": "703cf708185ec943",
        "name": "View Dashboard HTML",
        "level": "debug",
        "toConsole": false,
        "toSideBar": true,
        "outputProperty": "payload",
        "outputPropertyType": "msg",
        "x": 7310,
        "y": 360,
        "wires": [
            [
                "33ef44f10d884587"
            ]
        ]
    },
    {
        "id": "238a9166fb0a213e",
        "type": "template",
        "z": "703cf708185ec943",
        "name": "Dashboard Template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n<head>\n    <title>DeFi Yield Optimizer</title>\n    <style>\n        body { font-family: 'Segoe UI', Arial, sans-serif; margin: 0; padding: 20px; background: #f5f7fa; }\n        .container { max-width: 1200px; margin: 0 auto; }\n        .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; border-radius: 10px; margin-bottom: 30px; text-align: center; }\n        .header h1 { margin: 0; font-size: 2.5em; }\n        .header p { margin: 10px 0 0 0; opacity: 0.9; }\n        .stats-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin-bottom: 30px; }\n        .stat-card { background: white; padding: 25px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); text-align: center; }\n        .stat-number { font-size: 2.2em; font-weight: bold; color: #667eea; margin-bottom: 5px; }\n        .stat-label { color: #666; font-size: 0.9em; text-transform: uppercase; letter-spacing: 1px; }\n        .current-position { background: #e3f2fd; padding: 25px; border-radius: 10px; margin-bottom: 30px; border-left: 5px solid #2196f3; }\n        .recommendation { background: #e8f5e8; padding: 25px; border-radius: 10px; margin-bottom: 30px; border-left: 5px solid #4caf50; }\n        .opportunities-table { background: white; border-radius: 10px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n        table { width: 100%; border-collapse: collapse; }\n        th { background: #333; color: white; padding: 15px; text-align: left; font-weight: 600; }\n        td { padding: 15px; border-bottom: 1px solid #eee; }\n        .recommended { background: #f0fff0; }\n        .apy { font-weight: bold; color: #4caf50; }\n        .improvement { font-weight: bold; }\n        .positive { color: #4caf50; }\n        .negative { color: #f44336; }\n        .risk-low { color: #4caf50; background: #e8f5e8; padding: 4px 8px; border-radius: 4px; font-size: 0.8em; }\n        .risk-medium { color: #ff9800; background: #fff3e0; padding: 4px 8px; border-radius: 4px; font-size: 0.8em; }\n        .risk-high { color: #f44336; background: #ffebee; padding: 4px 8px; border-radius: 4px; font-size: 0.8em; }\n        .badge { padding: 4px 12px; border-radius: 20px; font-size: 0.8em; font-weight: bold; }\n        .badge-success { background: #4caf50; color: white; }\n        .badge-secondary { background: #6c757d; color: white; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>üöÄ DeFi Yield Optimizer</h1>\n            <p>Last Updated: <strong id=\"timestamp\">{{timestamp}}</strong> | \n            <button id=\"refreshBtn\" onclick=\"manualRefresh()\" style=\"padding: 8px 16px; background: rgba(255,255,255,0.2); color: white; border: none; border-radius: 4px; cursor: pointer; margin: 0 5px;\">üîÑ Refresh</button>\n            <a href=\"/logout\" style=\"margin-left: 15px; color: white; text-decoration: none; padding: 8px 16px; background: rgba(255,255,255,0.2); border-radius: 4px; font-size: 0.9em;\">üö™ Logout</a></p>\n        </div>\n        \n        <!-- System Status Banner -->\n        {{#system_status}}\n        <div style=\"background: #e8f4fd; padding: 18px 25px; border-radius: 10px; margin-bottom: 25px; \n            border-left: 5px solid #17a2b8; display: flex; justify-content: space-between; align-items: center;\n            box-shadow: 0 2px 8px rgba(0,0,0,0.1);\">\n            <div>\n                <span style=\"font-size: 1.1em; font-weight: 600;\">üü° Demo Mode Active</span>\n                <div style=\"font-size: 0.9em; margin-top: 3px; opacity: 0.8;\">\n                    {{message}}\n                </div>\n            </div>\n            <div style=\"text-align: right; font-size: 0.8em; color: #666;\">\n                <div>Status Check</div>\n                <div>{{timestamp}}</div>\n            </div>\n        </div>\n        {{/system_status}}\n        {{^system_status}}\n        <div style=\"background: #e8f5e8; padding: 18px 25px; border-radius: 10px; margin-bottom: 25px; \n             border-left: 5px solid #28a745; display: flex; justify-content: space-between; align-items: center;\n             box-shadow: 0 2px 8px rgba(0,0,0,0.1);\">\n            <div>\n                <span style=\"font-size: 1.1em; font-weight: 600;\">üü¢ Live System</span>\n                <div style=\"font-size: 0.9em; margin-top: 3px; opacity: 0.8;\">\n                    All systems operational - live data feed\n                </div>\n            </div>\n            <div style=\"text-align: right; font-size: 0.8em; color: #666;\">\n                <div>Status Check</div>\n                <div>{{timestamp}}</div>\n            </div>\n        </div>\n        {{/system_status}}\n        \n        <div class=\"stats-grid\">\n            <div class=\"stat-card\">\n                <div class=\"stat-number\">{{payload.total_found}}</div>\n                <div class=\"stat-label\">Opportunities Found</div>\n            </div>\n            <div class=\"stat-card\">\n                <div class=\"stat-number\">{{payload.recommended_count}}</div>\n                <div class=\"stat-label\">Recommended Moves</div>\n            </div>\n            <div class=\"stat-card\">\n                <div class=\"stat-number\">{{payload.current_portfolio.current_apy}}%</div>\n                <div class=\"stat-label\">Current APY</div>\n            </div>\n            <div class=\"stat-card\">\n                <div class=\"stat-number\">${{payload.current_portfolio.position_value}}</div>\n                <div class=\"stat-label\">Portfolio Value</div>\n            </div>\n        </div>\n\n        <div class=\"current-position\">\n            <h2>üìä Current Position</h2>\n            <p><strong>Protocol:</strong> {{payload.current_portfolio.protocol}}</p>\n            <p><strong>Pool:</strong> {{payload.current_portfolio.pool_name}}</p>\n            <p><strong>APY:</strong> {{payload.current_portfolio.current_apy}}%</p>\n            <p><strong>Position Value:</strong> ${{payload.current_portfolio.position_value}}</p>\n        </div>\n\n        <!-- Portfolio Configuration Button -->\n        <div style=\"text-align: center; margin: 25px 0;\">\n            <a href=\"/portfolio-form\" style=\"display: inline-block; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); \n               color: white; padding: 15px 30px; text-decoration: none; border-radius: 10px; font-weight: 600; \n               box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3); transition: all 0.3s ease;\">\n                ‚öôÔ∏è Configure Portfolio\n            </a>\n        </div>\n\n        {{#payload.top_recommendation.recommended}}\n        <div class=\"recommendation\">\n            <h2>üéØ Top Recommendation</h2>\n            <p><strong>Move to:</strong> {{payload.top_recommendation.protocol}} - {{payload.top_recommendation.pool_name}}</p>\n            <p><strong>New APY:</strong> {{payload.top_recommendation.apy}}%</p>\n            <p><strong>Improvement:</strong> <span class=\"positive\">+{{payload.top_recommendation.improvement}}%</span></p>\n            <p><strong>Estimated Annual Gain:</strong> <span class=\"positive\">${{payload.top_recommendation.annual_gain}}</span></p>\n            <p><strong>Risk Level:</strong> <span class=\"risk-{{payload.top_recommendation.risk_label}}\">{{payload.top_recommendation.risk_label}}</span></p>\n        </div>\n        {{/payload.top_recommendation.recommended}}\n        \n        {{^payload.top_recommendation.recommended}}\n        <!-- AI Analysis Section - Only shows when no recommendations -->\n        {{#payload.ai_analysis}}\n        <div style=\"background: linear-gradient(135deg, #e8f4fd 0%, #f0f8ff 100%); \n            padding: 25px; border-radius: 15px; margin-bottom: 30px; \n            border-left: 5px solid #17a2b8; box-shadow: 0 4px 15px rgba(0,0,0,0.1);\">\n            <h2>ü§ñ AI Investment Analysis</h2>\n            <div style=\"background: white; padding: 20px; border-radius: 10px; \n                box-shadow: 0 2px 10px rgba(0,0,0,0.05); line-height: 1.6;\">\n                {{content}}\n            </div>\n            <div style=\"text-align: right; margin-top: 15px; font-size: 0.8em; color: #666;\">\n                Generated: {{generated_at}} | Powered by OpenAI\n            </div>\n        </div>\n        {{/payload.ai_analysis}}\n        \n        {{^payload.ai_analysis}}\n        <div class=\"current-position\">\n            <h2>‚úÖ No Action Needed</h2>\n            <p>Your current position offers the best risk-adjusted returns available.</p>\n        </div>\n        {{/payload.ai_analysis}}\n        {{/payload.top_recommendation.recommended}}\n\n        <div class=\"opportunities-table\">\n            <h2 style=\"margin: 0; padding: 20px; background: #f8f9fa; border-bottom: 1px solid #eee;\">All Opportunities</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Protocol</th>\n                        <th>Pool</th>\n                        <th>APY</th>\n                        <th>TVL</th>\n                        <th>Improvement</th>\n                        <th>Risk</th>\n                        <th>Annual Gain</th>\n                        <th>Warnings</th>\n                        <th>Status</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {{#payload.opportunities}}\n                    <tr {{#recommended}}class=\"recommended\"{{/recommended}}>\n                        <td><strong>{{protocol}}</strong></td>\n                        <td>{{pool_name}}</td>\n                        <td class=\"apy\">{{apy}}%</td>\n                        <td>${{tvl_millions}}M</td>\n                        <td class=\"improvement\">{{improvement}}%</td>\n                        <td><span class=\"risk-{{risk_label}}\">{{risk_label}}</span></td>\n                        <td>${{annual_gain}}</td>\n                        <td style=\"max-width: 150px; font-size: 0.8em;\">\n                            {{#warnings}}\n                            <div style=\"padding: 2px 4px; margin: 1px 0; border-radius: 2px;\">{{.}}</div>\n                            {{/warnings}}\n                            {{^warnings}}<span>‚úÖ Clean</span>{{/warnings}}\n                        </td>\n                        <td>\n                            {{#recommended}}\n                            <span class=\"badge badge-success\">‚úÖ Recommended</span>\n                            {{/recommended}}\n                            {{^recommended}}\n                            <span class=\"badge badge-secondary\">‚è∏Ô∏è Hold</span>\n                            {{/recommended}}\n                        </td>\n                    </tr>\n                    {{/payload.opportunities}}\n                </tbody>\n            </table>\n        </div>\n\n        {{#payload.historical_data}}\n        <div style=\"background: white; border-radius: 10px; padding: 25px; margin-top: 30px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n            <h2>üìä System Analytics & History</h2>\n            \n            <div class=\"stats-grid\">\n                <div class=\"stat-card\">\n                    <div class=\"stat-number\">{{analytics.total_sessions}}</div>\n                    <div class=\"stat-label\">Total Sessions</div>\n                </div>\n                <div class=\"stat-card\">\n                    <div class=\"stat-number\">{{analytics.avg_opportunities}}</div>\n                    <div class=\"stat-label\">Avg Opportunities</div>\n                </div>\n                <div class=\"stat-card\">\n                    <div class=\"stat-number\">{{analytics.avg_recommended}}</div>\n                    <div class=\"stat-label\">Avg Recommended</div>\n                </div>\n                <div class=\"stat-card\">\n                    <div class=\"stat-number\">{{analytics.avg_execution_time_ms}}ms</div>\n                    <div class=\"stat-label\">Avg Response Time</div>\n                </div>\n            </div>\n\n            <h3 style=\"margin-top: 30px;\">Recent Analysis Sessions</h3>\n            <table style=\"width: 100%; border-collapse: collapse; margin-top: 15px;\">\n                <thead>\n                    <tr style=\"background: #f8f9fa;\">\n                        <th style=\"padding: 12px; text-align: left; border-bottom: 2px solid #dee2e6;\">Session ID</th>\n                        <th style=\"padding: 12px; text-align: left; border-bottom: 2px solid #dee2e6;\">Opportunities</th>\n                        <th style=\"padding: 12px; text-align: left; border-bottom: 2px solid #dee2e6;\">Recommended</th>\n                        <th style=\"padding: 12px; text-align: left; border-bottom: 2px solid #dee2e6;\">Source</th>\n                        <th style=\"padding: 12px; text-align: left; border-bottom: 2px solid #dee2e6;\">Exec Time</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {{#recent_sessions}}\n                    <tr>\n                        <td style=\"padding: 10px; border-bottom: 1px solid #eee;\">{{session_id}}</td>\n                        <td style=\"padding: 10px; border-bottom: 1px solid #eee;\">{{total_opportunities}}</td>\n                        <td style=\"padding: 10px; border-bottom: 1px solid #eee;\">{{recommended_count}}</td>\n                        <td style=\"padding: 10px; border-bottom: 1px solid #eee;\">\n                            <span style=\"padding: 2px 8px; border-radius: 12px; font-size: 0.8em; background: #e3f2fd; color: #1976d2;\">{{api_source}}</span>\n                        </td>\n                        <td style=\"padding: 10px; border-bottom: 1px solid #eee;\">{{execution_time_ms}}ms</td>\n                    </tr>\n                    {{/recent_sessions}}\n                </tbody>\n            </table>\n            \n            {{^recent_sessions}}\n            <p style=\"color: #666; font-style: italic; margin-top: 20px;\">No historical sessions available yet. Run the analysis a few times to see historical data.</p>\n            {{/recent_sessions}}\n        </div>\n        {{/payload.historical_data}}\n    </div>\n    \n    <script>\n    let isRefreshing = false;\n\n    function manualRefresh() {\n        if (isRefreshing) {\n            console.log('Refresh already in progress');\n            return;\n        }\n        \n        isRefreshing = true;\n        const refreshBtn = document.getElementById('refreshBtn');\n        if (refreshBtn) {\n            refreshBtn.disabled = true;\n            refreshBtn.textContent = '‚è≥ Refreshing...';\n        }\n        \n        // Add skip_ai parameter to prevent AI analysis loops\n        const url = new URL(window.location.href);\n        url.searchParams.set('skip_ai', 'true');\n        \n        fetch(url.toString())\n            .then(response => response.text())\n            .then(html => {\n                const parser = new DOMParser();\n                const newDoc = parser.parseFromString(html, 'text/html');\n                const newContainer = newDoc.querySelector('.container');\n                \n                if (newContainer) {\n                    document.querySelector('.container').innerHTML = newContainer.innerHTML;\n                    \n                    // Reinitialize refresh button\n                    const newRefreshBtn = document.getElementById('refreshBtn');\n                    if (newRefreshBtn) {\n                        newRefreshBtn.onclick = manualRefresh;\n                    }\n                }\n            })\n            .catch(error => {\n                console.error('Refresh failed:', error);\n                alert('Refresh failed. Please reload the page.');\n            })\n            .finally(() => {\n                isRefreshing = false;\n                const btn = document.getElementById('refreshBtn');\n                if (btn) {\n                    btn.disabled = false;\n                    btn.textContent = 'üîÑ Refresh';\n                }\n            });\n    }\n\n    // Initialize on page load\n    document.addEventListener('DOMContentLoaded', function() {\n        const refreshBtn = document.getElementById('refreshBtn');\n        if (refreshBtn) {\n            refreshBtn.onclick = manualRefresh;\n        }\n    });\n    </script>\n</body>\n</html>",
        "output": "str",
        "x": 7040,
        "y": 260,
        "wires": [
            [
                "33ef44f10d884587",
                "8e7bb53166418cdf"
            ]
        ]
    },
    {
        "id": "33ef44f10d884587",
        "type": "http response",
        "z": "703cf708185ec943",
        "name": "Web Return",
        "statusCode": "200",
        "headers": {},
        "x": 7550,
        "y": 260,
        "wires": []
    },
    {
        "id": "dcd130675ccb7df4",
        "type": "http in",
        "z": "703cf708185ec943",
        "name": "Dashboard",
        "url": "/dashboard",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "933e9e61e3ef5f73"
            ]
        ]
    },
    {
        "id": "abdde9854434a424",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Error Handler & Backup Data",
        "func": "// DEBUG: Force live mode temporarily\nmsg.start_time = Date.now();\nmsg.api_source = \"live\";\n\n// Debug: Log what we're getting from API\nnode.warn(\"DEBUG: API Response received\");\nnode.warn(\"DEBUG: msg.payload exists: \" + !!msg.payload);\nnode.warn(\"DEBUG: msg.payload.data exists: \" + !!(msg.payload && msg.payload.data));\nnode.warn(\"DEBUG: msg.payload.data length: \" + (msg.payload && msg.payload.data ? msg.payload.data.length : 0));\n\n// Check API response\nif (!msg.payload || !msg.payload.data || msg.payload.data.length === 0) {\n    node.warn(\"üîÑ API check failed - using backup data\");\n    msg.system_status = {\n        api_status: \"demo_mode\", \n        message: \"API unavailable - using backup data for demonstration\",\n        timestamp: new Date().toISOString()\n    };\n    msg.api_source = \"backup\";\n    \n    // Your existing backup data\n    msg.payload = {\n        data: [\n            { project: \"Compound\", symbol: \"USDC\", apy: 8.5, tvlUsd: 2000000000, chain: \"Ethereum\" },\n            { project: \"Aave\", symbol: \"USDT\", apy: 7.2, tvlUsd: 1500000000, chain: \"Ethereum\" },\n            { project: \"Curve\", symbol: \"3Pool\", apy: 6.8, tvlUsd: 800000000, chain: \"Ethereum\" },\n            { project: \"Uniswap\", symbol: \"USDC-ETH\", apy: 12.3, tvlUsd: 150000000, chain: \"Ethereum\" },\n            { project: \"Convex\", symbol: \"CRV\", apy: 15.7, tvlUsd: 75000000, chain: \"Ethereum\" }\n        ]\n    };\n} else {\n    node.warn(\"‚úÖ API SUCCESS - Live data detected!\");\n    node.warn(\"DEBUG: Found \" + msg.payload.data.length + \" pools from API\");\n    // DON'T SET system_status - this will show \"Live System\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 260,
        "wires": [
            [
                "c31310790cbaab10"
            ]
        ]
    },
    {
        "id": "8ca5afa350725104",
        "type": "switch",
        "z": "703cf708185ec943",
        "name": "Route by Recommendations",
        "property": "payload.recommended_count",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3100,
        "y": 260,
        "wires": [
            [
                "8ebf7455e8ff936d"
            ],
            [
                "326a862caffa0f1a"
            ]
        ]
    },
    {
        "id": "326a862caffa0f1a",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "No Opportunities Alert",
        "func": "msg.payload.alert = {\n    type: \"info\",\n    title: \"Portfolio Optimized\",\n    message: \"Your current position offers the best available risk-adjusted returns. No action needed.\"\n};\nnode.warn(\"No better opportunities found\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3380,
        "y": 360,
        "wires": [
            [
                "8ebf7455e8ff936d"
            ]
        ]
    },
    {
        "id": "7d96e0ee6f745393",
        "type": "catch",
        "z": "703cf708185ec943",
        "name": "Catch Errors",
        "scope": [
            "8d514e5a43f6a7ae",
            "c31310790cbaab10",
            "da2840936985d7e2",
            "abdde9854434a424"
        ],
        "uncaught": false,
        "x": 270,
        "y": 500,
        "wires": [
            [
                "be979ecb52f76f21"
            ]
        ]
    },
    {
        "id": "be979ecb52f76f21",
        "type": "log-tap",
        "z": "703cf708185ec943",
        "name": "Error Log",
        "level": "error",
        "toConsole": false,
        "toSideBar": true,
        "outputProperty": "",
        "outputPropertyType": "full",
        "x": 570,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "8ebf7455e8ff936d",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Save Opportunities DB",
        "func": "const opportunities = msg.payload.opportunities;\n\n// Save each opportunity to database\nif (opportunities && opportunities.length > 0) {\n    opportunities.forEach((opp, index) => {\n        const opportunityRecord = {\n            protocol: opp.protocol,\n            pool_name: opp.pool_name,\n            apy: opp.apy,\n            tvl_millions: opp.tvl_millions,\n            risk_score: opp.risk_score,\n            risk_label: opp.risk_label,\n            improvement: opp.improvement,\n            annual_gain: opp.annual_gain,\n            recommended: opp.recommended,\n            chain: opp.chain || \"Ethereum\"\n        };\n        \n        // Use Contextual's object creation\n        // Note: Exact API may vary - check Contextual.io docs\n        flow.set(`opportunity_${index}`, opportunityRecord);\n    });\n    \n    node.warn(`Saved ${opportunities.length} opportunities to database`);\n} else {\n    node.warn(\"No opportunities to save\");\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3640,
        "y": 260,
        "wires": [
            [
                "15fa887a936b2a9a"
            ]
        ]
    },
    {
        "id": "15fa887a936b2a9a",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Save Portfolio DB",
        "func": "const portfolio = msg.payload.current_portfolio;\n\nif (portfolio) {\n    const portfolioRecord = {\n        protocol: portfolio.protocol,\n        pool_name: portfolio.pool_name,\n        current_apy: portfolio.current_apy,\n        position_value: portfolio.position_value,\n        status: \"active\"\n    };\n    \n    // Save current portfolio state\n    flow.set('current_portfolio', portfolioRecord);\n    context.set('portfolio_history', portfolioRecord);\n    \n    node.warn(`Portfolio state saved: ${portfolio.protocol} at ${portfolio.current_apy}%`);\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3870,
        "y": 260,
        "wires": [
            [
                "6ac7d312dbe8e6e3"
            ]
        ]
    },
    {
        "id": "6ac7d312dbe8e6e3",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Save Session DB",
        "func": "// Calculate execution time\nconst executionTime = Date.now() - (msg.start_time || Date.now());\nconst sessionId = \"session_\" + Date.now();\n\nconst sessionRecord = {\n    session_id: sessionId,\n    total_opportunities: msg.payload.total_found || 0,\n    recommended_count: msg.payload.recommended_count || 0,\n    execution_time_ms: executionTime,\n    api_source: msg.api_source || \"unknown\"\n};\n\n// Save session data\nflow.set('latest_session', sessionRecord);\n\n// Keep history of last 10 sessions - USE FLOW CONTEXT\nlet sessionHistory = flow.get('session_history') || [];\nnode.warn(\"Current session history length: \" + sessionHistory.length);\n\nsessionHistory.unshift(sessionRecord);\nif (sessionHistory.length > 10) {\n    sessionHistory = sessionHistory.slice(0, 10);\n}\nflow.set('session_history', sessionHistory);  // <-- CHANGED TO flow.set\n\nnode.warn(\"Session saved: \" + sessionId);\nnode.warn(\"New session history length: \" + sessionHistory.length);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4090,
        "y": 260,
        "wires": [
            [
                "6508d59762aea4e3"
            ]
        ]
    },
    {
        "id": "e24bcfb1c7eee752",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Get Historical Data",
        "func": "// Retrieve stored historical data - USE FLOW CONTEXT\nconst recentSessions = flow.get('session_history') || [];  // <-- CHANGED TO flow.get\nconst currentPortfolio = flow.get('current_portfolio') || {};\n\n// DEBUG: Log what we're getting\nnode.warn(\"DEBUG: Retrieved \" + recentSessions.length + \" sessions from flow context\");\nif (recentSessions.length > 0) {\n    node.warn(\"DEBUG: First session: \" + JSON.stringify(recentSessions[0]));\n}\n\n// Calculate analytics\nconst avgOpportunities = recentSessions.length > 0 \n    ? Math.round(recentSessions.reduce((sum, s) => sum + s.total_opportunities, 0) / recentSessions.length * 100) / 100\n    : 0;\n\nconst avgRecommended = recentSessions.length > 0\n    ? Math.round(recentSessions.reduce((sum, s) => sum + s.recommended_count, 0) / recentSessions.length * 100) / 100\n    : 0;\n\nconst avgExecutionTime = recentSessions.length > 0\n    ? Math.round(recentSessions.reduce((sum, s) => sum + s.execution_time_ms, 0) / recentSessions.length)\n    : 0;\n\n// Add historical data to payload\nmsg.payload.historical_data = {\n    recent_sessions: recentSessions.slice(0, 5),\n    analytics: {\n        avg_opportunities: avgOpportunities,\n        avg_recommended: avgRecommended,\n        avg_execution_time_ms: avgExecutionTime,\n        total_sessions: recentSessions.length\n    }\n};\n\nnode.warn(\"DEBUG: Total sessions being sent: \" + msg.payload.historical_data.analytics.total_sessions);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 6790,
        "y": 260,
        "wires": [
            [
                "238a9166fb0a213e"
            ]
        ]
    },
    {
        "id": "efb578f9d62406eb",
        "type": "http in",
        "z": "703cf708185ec943",
        "name": "Portfolio Form",
        "url": "/portfolio-form",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 680,
        "wires": [
            [
                "2738d26d7aad6c7c"
            ]
        ]
    },
    {
        "id": "2738d26d7aad6c7c",
        "type": "template",
        "z": "703cf708185ec943",
        "name": "Portfolio Form Template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Configure Portfolio - DeFi Yield Optimizer</title>\n    <style>\n        body { font-family: 'Segoe UI', Arial, sans-serif; margin: 0; padding: 20px; background: #f5f7fa; }\n        .container { max-width: 600px; margin: 0 auto; }\n        .form-card { background: white; padding: 40px; border-radius: 15px; box-shadow: 0 4px 20px rgba(0,0,0,0.1); }\n        .form-group { margin-bottom: 25px; }\n        label { display: block; margin-bottom: 8px; font-weight: 600; color: #333; }\n        input, select { width: 100%; padding: 12px; border: 2px solid #e1e5e9; border-radius: 8px; font-size: 16px; box-sizing: border-box; }\n        input:focus, select:focus { border-color: #667eea; outline: none; }\n        .btn { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 15px 30px; border: none; border-radius: 8px; font-size: 16px; cursor: pointer; width: 100%; }\n        .btn:hover { transform: translateY(-2px); box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4); }\n        .current-info { background: #e3f2fd; padding: 20px; border-radius: 10px; margin-bottom: 30px; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"form-card\">\n            <h1>üè¶ Configure Your Portfolio</h1>\n            \n            <form action=\"/update-portfolio\" method=\"POST\">\n                <div class=\"form-group\">\n                    <label for=\"protocol\">Protocol</label>\n                    <select id=\"protocol\" name=\"protocol\" required>\n                        <option value=\"\">Select Protocol</option>\n                        <option value=\"Compound\">Compound</option>\n                        <option value=\"Aave\">Aave</option>\n                        <option value=\"Curve\">Curve</option>\n                        <option value=\"Uniswap\">Uniswap</option>\n                        <option value=\"Convex\">Convex</option>\n                        <option value=\"Yearn\">Yearn</option>\n                    </select>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"pool_name\">Pool/Asset</label>\n                    <input type=\"text\" id=\"pool_name\" name=\"pool_name\" placeholder=\"e.g., USDC, ETH-USDC\" required>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"current_apy\">Current APY (%)</label>\n                    <input type=\"number\" id=\"current_apy\" name=\"current_apy\" step=\"0.1\" min=\"0\" max=\"100\" placeholder=\"5.2\" required>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"position_value\">Position Value ($)</label>\n                    <input type=\"number\" id=\"position_value\" name=\"position_value\" min=\"0\" placeholder=\"10000\" required>\n                </div>\n\n                <button type=\"submit\" class=\"btn\">üíæ Update Portfolio</button>\n            </form>\n\n            <div style=\"text-align: center; margin-top: 30px;\">\n                <a href=\"/dashboard\" style=\"color: #667eea; text-decoration: none;\">‚Üê Back to Dashboard</a>\n            </div>\n        </div>\n    </div>\n</body>\n</html>",
        "output": "str",
        "x": 390,
        "y": 680,
        "wires": [
            [
                "deecf1e3b1098072"
            ]
        ]
    },
    {
        "id": "2e38e87a4092cb51",
        "type": "http in",
        "z": "703cf708185ec943",
        "name": "Update Portfolio",
        "url": "/update-portfolio",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 780,
        "wires": [
            [
                "cc8254adb37c2323"
            ]
        ]
    },
    {
        "id": "deecf1e3b1098072",
        "type": "http response",
        "z": "703cf708185ec943",
        "name": "Portfolio Form Response",
        "statusCode": "",
        "headers": {},
        "x": 710,
        "y": 680,
        "wires": []
    },
    {
        "id": "5b9fe73be4d9a3d9",
        "type": "http response",
        "z": "703cf708185ec943",
        "name": "Update Portfolio Response",
        "statusCode": "",
        "headers": {},
        "x": 1060,
        "y": 780,
        "wires": []
    },
    {
        "id": "9af5581171e8fbfb",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Process Portfolio Update",
        "func": "node.warn(\"Processing portfolio update\");\n\n// Extract form data\nconst protocol = msg.payload.protocol;\nconst pool_name = msg.payload.pool_name;\nconst current_apy = parseFloat(msg.payload.current_apy);\nconst position_value = parseFloat(msg.payload.position_value);\n\n// Get user ID from previous function\nconst userId = msg.user_id;\n\nnode.warn(`Portfolio update for user: ${userId || 'UNKNOWN'}`);\nnode.warn(`Form data: ${protocol}, ${pool_name}, ${current_apy}%, $${position_value}`);\n\n// Validate form data\nif (!protocol || !pool_name || isNaN(current_apy) || isNaN(position_value)) {\n    node.error(\"Invalid portfolio data received\");\n    msg.payload = \"Invalid portfolio data\";\n    msg.statusCode = 400;\n    return msg;\n}\n\n// Validate user authentication\nif (!userId) {\n    node.error(\"No user ID found - authentication failed\");\n    msg.payload = \"User not authenticated\";\n    msg.statusCode = 401;\n    return msg;\n}\n\n// Create portfolio object\nconst portfolioData = {\n    protocol: protocol,\n    pool_name: pool_name,\n    current_apy: current_apy,\n    position_value: position_value,\n    user_id: userId,\n    last_updated: new Date().toISOString()\n};\n\n// Save to user-specific flow context\nconst userPortfolioKey = `portfolio_${userId}`;\nflow.set(userPortfolioKey, portfolioData);\n\n// Log success\nnode.warn(`‚úÖ Portfolio updated for ${userId}: ${protocol} - ${pool_name} at ${current_apy}% APY, $${position_value}`);\n\n// Redirect back to dashboard\nmsg.statusCode = 302;\nmsg.headers = {\n    \"Location\": \"/dashboard?updated=true\"\n};\nmsg.payload = \"Portfolio updated successfully\";\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 780,
        "wires": [
            [
                "5b9fe73be4d9a3d9"
            ]
        ]
    },
    {
        "id": "ab0ac4f5c46d437a",
        "type": "http in",
        "z": "703cf708185ec943",
        "name": "Login Form",
        "url": "/login",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 880,
        "wires": [
            [
                "d20c512269eac040"
            ]
        ]
    },
    {
        "id": "d20c512269eac040",
        "type": "template",
        "z": "703cf708185ec943",
        "name": "Login Template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Login - DeFi Yield Optimizer</title>\n    <style>\n        body { font-family: 'Segoe UI', Arial, sans-serif; margin: 0; padding: 0; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); min-height: 100vh; display: flex; align-items: center; justify-content: center; }\n        .login-card { background: white; padding: 40px; border-radius: 15px; box-shadow: 0 10px 30px rgba(0,0,0,0.2); width: 100%; max-width: 400px; }\n        .form-group { margin-bottom: 20px; }\n        label { display: block; margin-bottom: 8px; font-weight: 600; color: #333; }\n        input { width: 100%; padding: 12px; border: 2px solid #e1e5e9; border-radius: 8px; font-size: 16px; box-sizing: border-box; }\n        input:focus { border-color: #667eea; outline: none; }\n        .btn { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 15px; border: none; border-radius: 8px; font-size: 16px; cursor: pointer; width: 100%; }\n        .btn:hover { transform: translateY(-2px); box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4); }\n        .link { text-align: center; margin-top: 20px; }\n        .link a { color: #667eea; text-decoration: none; }\n        h1 { text-align: center; color: #333; margin-bottom: 30px; }\n        .demo-note { background: #e8f4fd; padding: 15px; border-radius: 8px; margin-bottom: 20px; text-align: center; font-size: 14px; color: #666; }\n    </style>\n</head>\n<body>\n    <div class=\"login-card\">\n        <h1>üöÄ DeFi Optimizer</h1>\n        <div class=\"demo-note\">\n            <strong>Demo Login:</strong> admin@demo.com / password\n        </div>\n        <form action=\"/authenticate\" method=\"POST\">\n            <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" name=\"email\" value=\"admin@demo.com\" required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" name=\"password\" value=\"password\" required>\n            </div>\n            <button type=\"submit\" class=\"btn\">üîë Login</button>\n        </form>\n        <div class=\"link\">\n            <a href=\"/register\">Don't have an account? Register</a>\n        </div>\n    </div>\n</body>\n</html>",
        "output": "str",
        "x": 360,
        "y": 880,
        "wires": [
            [
                "a488c57cbbba9a3e"
            ]
        ]
    },
    {
        "id": "6bab1690dc3c48bc",
        "type": "http in",
        "z": "703cf708185ec943",
        "name": "Process Login",
        "url": "/authenticate",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 980,
        "wires": [
            [
                "a78ba20a13c02d16"
            ]
        ]
    },
    {
        "id": "a78ba20a13c02d16",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "User Authentication",
        "func": "// Simple demo users database\nconst demoUsers = {\n    \"admin@demo.com\": {\n        id: \"user_admin\",\n        email: \"admin@demo.com\",\n        password: \"password\",\n        name: \"Demo Admin\"\n    },\n    \"user@test.com\": {\n        id: \"user_test\",\n        email: \"user@test.com\", \n        password: \"test123\",\n        name: \"Test User\"\n    }\n};\n\n// Get users from flow context (persistent storage)\nlet users = flow.get('users_db') || demoUsers;\n\nconst { email, password } = msg.payload;\n\n// Check credentials\nconst user = users[email];\nif (user && user.password === password) {\n    // Successful login\n    msg.user_id = user.id;\n    msg.user_name = user.name;\n    \n    // Set success response\n    msg.statusCode = 302;\n    msg.headers = {\n        \"Location\": \"/dashboard\",\n        \"Set-Cookie\": `user_session=${user.id}; Path=/; Max-Age=86400; HttpOnly`\n    };\n    msg.payload = \"Login successful\";\n    \n    node.warn(`User logged in: ${user.name} (${user.email})`);\n} else {\n    // Failed login\n    msg.statusCode = 302;\n    msg.headers = { \"Location\": \"/login?error=invalid\" };\n    msg.payload = \"Invalid credentials\";\n    \n    node.warn(`Failed login attempt: ${email}`);\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 980,
        "wires": [
            [
                "ca782d2942fb6a7f"
            ]
        ]
    },
    {
        "id": "7b2626c3f9c90c13",
        "type": "http in",
        "z": "703cf708185ec943",
        "name": "Register Form",
        "url": "/register",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1080,
        "wires": [
            [
                "03f57bffcf90547d"
            ]
        ]
    },
    {
        "id": "03f57bffcf90547d",
        "type": "template",
        "z": "703cf708185ec943",
        "name": "Register Template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Register - DeFi Yield Optimizer</title>\n    <style>\n        body { font-family: 'Segoe UI', Arial, sans-serif; margin: 0; padding: 0; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); min-height: 100vh; display: flex; align-items: center; justify-content: center; }\n        .register-card { background: white; padding: 40px; border-radius: 15px; box-shadow: 0 10px 30px rgba(0,0,0,0.2); width: 100%; max-width: 400px; }\n        .form-group { margin-bottom: 20px; }\n        label { display: block; margin-bottom: 8px; font-weight: 600; color: #333; }\n        input { width: 100%; padding: 12px; border: 2px solid #e1e5e9; border-radius: 8px; font-size: 16px; box-sizing: border-box; }\n        input:focus { border-color: #667eea; outline: none; }\n        .btn { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 15px; border: none; border-radius: 8px; font-size: 16px; cursor: pointer; width: 100%; }\n        .btn:hover { transform: translateY(-2px); box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4); }\n        .link { text-align: center; margin-top: 20px; }\n        .link a { color: #667eea; text-decoration: none; }\n        h1 { text-align: center; color: #333; margin-bottom: 30px; }\n    </style>\n</head>\n<body>\n    <div class=\"register-card\">\n        <h1>üöÄ Join DeFi Optimizer</h1>\n        <form action=\"/create-account\" method=\"POST\">\n            <div class=\"form-group\">\n                <label for=\"name\">Full Name</label>\n                <input type=\"text\" id=\"name\" name=\"name\" required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" name=\"email\" required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" name=\"password\" minlength=\"6\" required>\n            </div>\n            <button type=\"submit\" class=\"btn\">üìù Create Account</button>\n        </form>\n        <div class=\"link\">\n            <a href=\"/login\">Already have an account? Login</a>\n        </div>\n    </div>\n</body>\n</html>",
        "output": "str",
        "x": 370,
        "y": 1080,
        "wires": [
            [
                "22826a70c249ece1"
            ]
        ]
    },
    {
        "id": "37e5646090e5e4b1",
        "type": "http in",
        "z": "703cf708185ec943",
        "name": "Process Registration",
        "url": "/create-account",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1180,
        "wires": [
            [
                "0a188235cb9d1288"
            ]
        ]
    },
    {
        "id": "0a188235cb9d1288",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Create User Account",
        "func": "// Get users database\nlet users = flow.get('users_db') || {};\n\nconst { name, email, password } = msg.payload;\n\n// Check if user already exists\nif (users[email]) {\n    msg.statusCode = 302;\n    msg.headers = { \"Location\": \"/register?error=exists\" };\n    msg.payload = \"User already exists\";\n    return msg;\n}\n\n// Create new user\nconst userId = 'user_' + Date.now();\nusers[email] = {\n    id: userId,\n    email: email,\n    password: password, // In production: hash this!\n    name: name,\n    created: new Date().toISOString()\n};\n\n// Save users database\nflow.set('users_db', users);\n\n// Redirect to login\nmsg.statusCode = 302;\nmsg.headers = { \"Location\": \"/login?registered=true\" };\nmsg.payload = \"Account created successfully\";\n\nnode.warn(`New user registered: ${name} (${email})`);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1180,
        "wires": [
            [
                "9e657646b0f852e4"
            ]
        ]
    },
    {
        "id": "dba98e7d9f6a5f4a",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Check Authentication",
        "func": "console.log('Authentication Check begin');\nlet cookies = '';\nlet userId = null;\n\ntry {\n    if (msg.req && msg.req.headers && msg.req.headers.cookie) {\n        cookies = msg.req.headers.cookie;\n        const sessionMatch = cookies.match(/user_session=([^;]+)/);\n        userId = sessionMatch ? sessionMatch[1] : null;\n    }\n} catch (error) {\n    node.warn(\"Header extraction failed: \" + error.message);\n}\n\nnode.warn(`DEBUG: User ID extracted: ${userId || 'NONE'}`);\n\nif (userId) {\n    // User is authenticated - send to output 1 (dashboard flow)\n    msg.user_id = userId;  // CRITICAL: This makes user_id available to all downstream nodes\n    \n    const users = flow.get('users_db') || {};\n    const user = Object.values(users).find(u => u.id === userId);\n    if (user) {\n        msg.user_name = user.name;\n        msg.user_email = user.email;\n    }\n    \n    node.warn(`‚úÖ Authenticated user: ${userId} - continuing to dashboard`);\n    return [msg, null]; // First output: continue to dashboard\n    \n} else {\n    // Not authenticated - send redirect message to output 2\n    node.warn(`üö´ No authentication - preparing redirect to login`);\n    \n    const redirectMsg = {\n        req: msg.req,\n        res: msg.res,\n        statusCode: 302,\n        headers: { \n            \"Location\": \"/login\",\n            \"Content-Type\": \"text/html\"\n        },\n        payload: \"Redirecting to login...\"\n    };\n    \n    return [null, redirectMsg]; // Second output: redirect to login\n}",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 360,
        "wires": [
            [
                "8d514e5a43f6a7ae"
            ],
            [
                "559895f9b5d312b0"
            ]
        ]
    },
    {
        "id": "a488c57cbbba9a3e",
        "type": "http response",
        "z": "703cf708185ec943",
        "name": "Login Response",
        "statusCode": "",
        "headers": {},
        "x": 700,
        "y": 880,
        "wires": []
    },
    {
        "id": "ca782d2942fb6a7f",
        "type": "http response",
        "z": "703cf708185ec943",
        "name": "Process Login Response",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 980,
        "wires": []
    },
    {
        "id": "22826a70c249ece1",
        "type": "http response",
        "z": "703cf708185ec943",
        "name": "Register Form Response",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 1080,
        "wires": []
    },
    {
        "id": "9e657646b0f852e4",
        "type": "http response",
        "z": "703cf708185ec943",
        "name": "Process Registration Response",
        "statusCode": "",
        "headers": {},
        "x": 750,
        "y": 1180,
        "wires": []
    },
    {
        "id": "933e9e61e3ef5f73",
        "type": "switch",
        "z": "703cf708185ec943",
        "name": "",
        "property": "req.url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "/dashboard?bypass=true",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 460,
        "y": 260,
        "wires": [
            [
                "8d514e5a43f6a7ae"
            ],
            [
                "dba98e7d9f6a5f4a"
            ]
        ]
    },
    {
        "id": "559895f9b5d312b0",
        "type": "http response",
        "z": "703cf708185ec943",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 990,
        "y": 420,
        "wires": []
    },
    {
        "id": "45815f4c122ab5c6",
        "type": "http in",
        "z": "703cf708185ec943",
        "name": "Logout",
        "url": "/logout",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 600,
        "wires": [
            [
                "1e17666402f2bbb1"
            ]
        ]
    },
    {
        "id": "1e17666402f2bbb1",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Process Logout",
        "func": "// STEP 1: Add this HTTP In node for logout route\n// Node type: \"http in\"\n// URL: /logout\n// Method: get\n\n// STEP 2: Add this function node - \"Process Logout\"\n// Connect: Logout HTTP In ‚Üí Process Logout ‚Üí HTTP Response\n\n// Process Logout Function Code:\nnode.warn(\"Processing logout request\");\n\n// Clear the session cookie by setting it to expire immediately\nmsg.statusCode = 302;\nmsg.headers = {\n    \"Location\": \"/login?logout=success\",\n    \"Set-Cookie\": \"user_session=; Path=/; Max-Age=0; HttpOnly\", // Expire immediately\n    \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n    \"Pragma\": \"no-cache\",\n    \"Expires\": \"0\"\n};\nmsg.payload = \"Logged out successfully\";\n\nnode.warn(\"User logged out - redirecting to login\");\nreturn msg;\n\n// STEP 3: Update your Dashboard Template to include logout button\n// Add this to your dashboard template inside the header section:\n\n// Replace the existing header <p> tag with this enhanced version:\n/*\n<p>Last Updated: <strong id=\"timestamp\">{{timestamp}}</strong> | \n   <button id=\"refreshBtn\" onclick=\"manualRefresh()\" style=\"padding: 8px 16px; background: #667eea; color: white; border: none; border-radius: 4px; cursor: pointer;\">üîÑ Refresh Data</button>\n   <span id=\"autoStatus\" style=\"margin-left: 15px; color: white; font-size: 0.9em;\">Auto-refresh: 30s</span> |\n   <a href=\"/logout\" style=\"margin-left: 15px; color: white; text-decoration: none; padding: 8px 16px; background: rgba(255,255,255,0.2); border-radius: 4px; font-size: 0.9em;\">üö™ Logout</a>\n</p>\n*/\n\n// STEP 4: Enhanced Login Template with logout success message\n// Update your Login Template to show logout success message:\n\n// Add this JavaScript to your login template (before </body>):\n/*\n<script>\n// Check for logout success message\nconst urlParams = new URLSearchParams(window.location.search);\nif (urlParams.get('logout') === 'success') {\n    // Create and show success message\n    const successMsg = document.createElement('div');\n    successMsg.style.cssText = 'background: #d4edda; color: #155724; padding: 10px; border-radius: 5px; margin-bottom: 20px; text-align: center; border: 1px solid #c3e6cb;';\n    successMsg.textContent = '‚úÖ You have been logged out successfully';\n    \n    // Insert before the form\n    const form = document.querySelector('form');\n    form.parentNode.insertBefore(successMsg, form);\n    \n    // Remove message after 5 seconds\n    setTimeout(() => {\n        successMsg.remove();\n    }, 5000);\n}\n\n// Check for login error\nif (urlParams.get('error') === 'invalid') {\n    const errorMsg = document.createElement('div');\n    errorMsg.style.cssText = 'background: #f8d7da; color: #721c24; padding: 10px; border-radius: 5px; margin-bottom: 20px; text-align: center; border: 1px solid #f5c6cb;';\n    errorMsg.textContent = '‚ùå Invalid email or password';\n    \n    const form = document.querySelector('form');\n    form.parentNode.insertBefore(errorMsg, form);\n    \n    setTimeout(() => {\n        errorMsg.remove();\n    }, 5000);\n}\n</script>\n*/",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 600,
        "wires": [
            [
                "842a983fd5c2acf9"
            ]
        ]
    },
    {
        "id": "842a983fd5c2acf9",
        "type": "http response",
        "z": "703cf708185ec943",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 600,
        "wires": []
    },
    {
        "id": "cc8254adb37c2323",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Extract User from Session",
        "func": "let userId = null;\ntry {\n    if (msg.req && msg.req.headers && msg.req.headers.cookie) {\n        const sessionMatch = msg.req.headers.cookie.match(/user_session=([^;]+)/);\n        userId = sessionMatch ? sessionMatch[1] : null;\n    }\n} catch (error) {\n    node.warn(\"Session extraction failed: \" + error.message);\n}\n\nif (userId) {\n    msg.user_id = userId;\n    return msg;\n} else {\n    // Redirect to login\n    msg.statusCode = 302;\n    msg.headers = { \"Location\": \"/login\" };\n    msg.payload = \"Please login first\";\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 780,
        "wires": [
            [
                "9af5581171e8fbfb"
            ]
        ]
    },
    {
        "id": "9b8eea4ed8f2f2a8",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Generate GPT Prompt",
        "func": "const { opportunities, recommended_count, current_portfolio } = msg.payload;\n\nconst summaryPrompt = `\nYou are a DeFi investment assistant. Based on the following data, write a 2-paragraph summary for a user evaluating DeFi yield farming options.\n\nInclude:\n- Are yields high, low, or mixed?\n- Are there notable improvements or standout pools?\n- Is there notable risk (e.g., very high APY or low TVL)?\n- Finish with a brief investment suggestion.\n\nCurrent Portfolio:\n${JSON.stringify(current_portfolio, null, 2)}\n\nTop Opportunities:\n${JSON.stringify(opportunities.slice(0, 5), null, 2)}\n`;\n\nmsg.openai_prompt = summaryPrompt;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4580,
        "y": 260,
        "wires": [
            [
                "d4fb3a04cb4e83dd"
            ]
        ]
    },
    {
        "id": "2bdb0fd018e6446f",
        "type": "http request",
        "z": "703cf708185ec943",
        "name": "Call OpenAI API",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.openai.com/v1/chat/completions",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 5160,
        "y": 260,
        "wires": [
            [
                "3f9c5138ce02ce96"
            ]
        ]
    },
    {
        "id": "89b56fb4c5252527",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Parse OpenAI Response",
        "func": "   let responseData;\n    let aiMessage;\n\n    try {\n        if (typeof msg.payload === 'string') {\n            responseData = JSON.parse(msg.payload);\n        } else {\n            responseData = msg.payload;\n        }\n        \n        aiMessage = responseData.choices?.[0]?.message?.content || \"AI analysis unavailable.\";\n        \n        node.warn(\"‚úÖ OpenAI response parsed successfully\");\n        \n    } catch (error) {\n        node.error(\"Failed to parse OpenAI response: \" + error.message);\n        aiMessage = \"‚ö†Ô∏è Error parsing AI response. Please try again.\";\n    }\n\n    const aiAnalysis = {\n        content: aiMessage.trim(),\n        generated_at: new Date().toISOString()\n    };\n\n    // Cache successful AI analysis for future use\n    if (!aiMessage.includes('Error') && !aiMessage.includes('unavailable')) {\n        flow.set('cached_ai_analysis', aiAnalysis);\n        node.warn(\"üìù Cached AI analysis for future use\");\n    }\n\n    // Store AI analysis (don't trigger another flow)\n    msg.ai_analysis = aiAnalysis;\n\n    // IMPORTANT: Mark this message to prevent AI re-processing\n    msg.ai_processed = true;\n\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 6250,
        "y": 220,
        "wires": [
            [
                "e1d5bb0b21854665"
            ]
        ]
    },
    {
        "id": "d4fb3a04cb4e83dd",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Format OpenAI Request",
        "func": "// Check if we should skip AI analysis (to prevent loops)\nif (msg.skip_ai_analysis) {\n    node.warn(\"Skipping AI analysis to prevent loops\");\n    msg.ai_analysis = {\n        content: \"AI analysis skipped for this request\",\n        generated_at: new Date().toISOString()\n    };\n    return msg;\n}\n\nconst apiKey = \"\";\n\n// UPDATED: Increased rate limiting from 5 seconds to 30 seconds\nconst lastAICall = context.get('last_ai_call') || 0;\nconst now = Date.now();\nconst timeSinceLastCall = now - lastAICall;\nconst cooldownPeriod = 30000; // 30 seconds = 30000 milliseconds\n\nnode.warn(`‚è±Ô∏è Time since last AI call: ${Math.round(timeSinceLastCall/1000)} seconds`);\nnode.warn(`‚è±Ô∏è Required cooldown: ${cooldownPeriod/1000} seconds`);\n\nif (timeSinceLastCall < cooldownPeriod) {\n    const remainingWait = Math.round((cooldownPeriod - timeSinceLastCall) / 1000);\n    node.warn(`üö´ AI call rate limited - need to wait ${remainingWait} more seconds`);\n    \n    msg.ai_analysis = {\n        content: `AI analysis rate limited. Please wait ${remainingWait} more seconds before requesting new analysis. This prevents hitting OpenAI's usage limits.`,\n        generated_at: new Date().toISOString()\n    };\n    return msg;\n}\n\n// Record this AI call attempt\ncontext.set('last_ai_call', now);\nnode.warn(\"‚úÖ Rate limit check passed - proceeding with AI call\");\n\nmsg.headers = {\n    \"Authorization\": `Bearer ${apiKey}`,\n    \"Content-Type\": \"application/json\"\n};\n\nmsg.payload = {\n    model: \"gpt-4o-mini\",\n    messages: [\n        {\n            role: \"system\",\n            content: \"You are a helpful DeFi investment analyst. Provide concise, actionable insights in exactly 2 paragraphs.\"\n        },\n        {\n            role: \"user\",\n            content: msg.openai_prompt || \"Generate a DeFi yield farming summary.\"\n        }\n    ],\n    max_tokens: 300,\n    temperature: 0.7\n};\n\nnode.warn(\"üöÄ Sending request to OpenAI API\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4830,
        "y": 260,
        "wires": [
            [
                "2bdb0fd018e6446f"
            ]
        ]
    },
    {
        "id": "ec18b48348f297dc",
        "type": "switch",
        "z": "703cf708185ec943",
        "name": "Error Handling",
        "property": "openai_success",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "boolean true ",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "boolean true ",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 5760,
        "y": 260,
        "wires": [
            [
                "89b56fb4c5252527"
            ],
            [
                "d97b265c656f28c4"
            ]
        ]
    },
    {
        "id": "d97b265c656f28c4",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Fallback Message",
        "func": "// Get the stored main payload\nconst mainPayload = flow.get('main_dashboard_payload');\n\nconst fallbackAnalysis = {\n    content: \"‚ö†Ô∏è AI service is temporarily unavailable. Please try again shortly.\",\n    generated_at: new Date().toISOString()\n};\n\n// Store AI analysis for merging\nmsg.ai_analysis = fallbackAnalysis;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5990,
        "y": 360,
        "wires": [
            [
                "89b56fb4c5252527"
            ]
        ]
    },
    {
        "id": "6508d59762aea4e3",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Store Main Payload",
        "func": "flow.set('main_dashboard_payload', msg.payload);\nnode.warn(\"üì¶ Stored main dashboard payload with \" + msg.payload.opportunities.length + \" opportunities\");\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4330,
        "y": 340,
        "wires": [
            [
                "a915fde088327f52"
            ],
            [
                "e1d5bb0b21854665"
            ]
        ]
    },
    {
        "id": "e1d5bb0b21854665",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Merge AI Analysis",
        "func": "const mainPayload = flow.get('main_dashboard_payload');\n\nif (mainPayload && msg.ai_analysis) {\n    // Merge AI analysis into the main payload\n    mainPayload.ai_analysis = msg.ai_analysis;\n    msg.payload = mainPayload;\n    \n    node.warn(\"‚úÖ AI analysis merged with dashboard data\");\n    node.warn(\"Dashboard opportunities count: \" + (mainPayload.opportunities ? mainPayload.opportunities.length : 0));\n} else if (msg.ai_analysis) {\n    // Fallback: just add AI analysis to whatever payload exists\n    if (typeof msg.payload === 'object') {\n        msg.payload.ai_analysis = msg.ai_analysis;\n    } else {\n        msg.payload = { ai_analysis: msg.ai_analysis };\n    }\n    node.warn(\"‚ö†Ô∏è Added AI analysis to existing payload (fallback)\");\n} else {\n    node.warn(\"‚ùå No AI analysis to merge\");\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 6530,
        "y": 260,
        "wires": [
            [
                "e24bcfb1c7eee752"
            ]
        ]
    },
    {
        "id": "3f9c5138ce02ce96",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Check Response Status",
        "func": "\n    const statusCode = msg.statusCode || 0;\n    node.warn(`OpenAI API Response Status: ${statusCode}`);\n\n    if (statusCode >= 200 && statusCode < 300) {\n        msg.openai_success = true;\n        node.warn(\"‚úÖ OpenAI API call successful\");\n    } else if (statusCode === 429) {\n        // Rate limited\n        msg.openai_success = false;\n        msg.ai_analysis = {\n            content: \"‚ö†Ô∏è AI service is rate limited. Please try again in a moment.\",\n            generated_at: new Date().toISOString()\n        };\n        node.warn(\"‚ö†Ô∏è OpenAI rate limited\");\n    } else {\n        msg.openai_success = false;\n        node.warn(`‚ùå OpenAI API call failed with status ${statusCode}`);\n    }\n\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5510,
        "y": 260,
        "wires": [
            [
                "ec18b48348f297dc"
            ]
        ]
    },
    {
        "id": "a915fde088327f52",
        "type": "function",
        "z": "703cf708185ec943",
        "name": "Check Skip AI",
        "func": "  const url = msg.req ? msg.req.url : '';\n    const skipAI = url.includes('skip_ai=true') || msg.skip_ai_analysis;\n    \n    // DEBUG LOGGING\n    node.warn(\"=== DEBUG CHECK SKIP AI ===\");\n    node.warn(\"URL: \" + url);\n    node.warn(\"Skip AI flag: \" + skipAI);\n    node.warn(\"Has skip_ai_analysis: \" + !!msg.skip_ai_analysis);\n    \n    if (skipAI) {\n        node.warn(\"üîÑ Skipping AI analysis for refresh request\");\n        \n        // Get cached AI analysis if available\n        const cachedAI = flow.get('cached_ai_analysis');\n        node.warn(\"Cached AI exists: \" + !!cachedAI);\n        \n        if (cachedAI && cachedAI.generated_at) {\n            const cacheAge = Date.now() - new Date(cachedAI.generated_at).getTime();\n            node.warn(\"Cache age (ms): \" + cacheAge);\n            \n            // Use cached AI if less than 5 minutes old\n            if (cacheAge < 300000) {\n                msg.ai_analysis = cachedAI;\n                node.warn(\"‚úÖ Using cached AI analysis\");\n                return [null, msg]; // Output 2: Skip AI generation\n            }\n        }\n        \n        // No valid cache, use fallback\n        msg.ai_analysis = {\n            content: \"AI analysis temporarily skipped for faster refresh.\",\n            generated_at: new Date().toISOString()\n        };\n        \n        node.warn(\"‚ö†Ô∏è Using fallback AI message\");\n        return [null, msg]; // Output 2: Skip AI generation\n    }\n    \n    node.warn(\"ü§ñ Proceeding with AI analysis\");\n    return [msg, null]; // Output 1: Continue to AI generation",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4380,
        "y": 180,
        "wires": [
            [
                "9b8eea4ed8f2f2a8"
            ],
            [
                "e1d5bb0b21854665"
            ]
        ]
    },
    {
        "id": "6b2d829754352b31",
        "type": "comment",
        "z": "703cf708185ec943",
        "name": "https://defi-opportunity-analyzer.service.velocity.my.contextual.io/dashboard?bypass=true",
        "info": "",
        "x": 350,
        "y": 60,
        "wires": []
    },
    {
        "id": "499caaacc6e27ad3",
        "type": "comment",
        "z": "703cf708185ec943",
        "name": "https://defi-opportunity-analyzer.service.velocity.my.contextual.io/dashboard",
        "info": "user id: admin@demo.com\npassword: password",
        "x": 310,
        "y": 20,
        "wires": []
    }
]